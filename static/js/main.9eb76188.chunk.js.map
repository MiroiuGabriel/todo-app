{"version":3,"sources":["components/Button.js","components/Task.js","components/TodoList.js","components/InputBox.js","components/AddTodo.js","components/TodoApp.js","App.js","index.js"],"names":["Button","children","outline","className","rest","css","clsx","Task","task","onRemove","showCompleted","onEdit","theme","completed","title","edit","onDoubleClick","id","content","onClick","TodoList","tasks","byCompleted","byTodo","todo","finished","byAll","all","taskList","filter","map","InputBox","label","value","onChange","hasError","textBox","labelBox","type","AddTodo","addTask","onEditCancel","editTask","saveEditTask","changeTheme","useState","setTitle","setContent","errors","setErrors","taskTracker","btn","themeBtn","length","newContent","e","target","counter","initialTasks","Array","from","_","i","TodoApp","setTasks","setEditTask","setFinished","setTodo","setAll","setTheme","useEffect","document","body","style","containerClass","newTask","onCancel","setEditMode","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9eb76188.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\n\nconst Button = ({ children, outline, className, ...rest }) => {\n  const css = clsx(\"button\", className, outline && \"outline\");\n  return (\n    <button {...rest} className={css}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport clsx from 'clsx';\nimport './css/task.css';\n\nconst Task = ({ task, onRemove, showCompleted, onEdit, theme }) => {\n\tconst completed = task.completed ? 'completed' : '';\n\tconst title = clsx('task-title', theme);\n\tconst edit = clsx('edit', theme);\n\treturn (\n\t\t<div className={`task-container ${completed}`} onDoubleClick={() => showCompleted(task.id)}>\n\t\t\t<div className=\"task-content\">\n\t\t\t\t<h3 className={`${title} ${completed}`}>{task.title}</h3>\n\t\t\t\t<p className={title}>{task.content}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={edit}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonEdit(task);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tEdit\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"remove\" onClick={() => onRemove(task.id)}>\n\t\t\t\t\tRemove\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Task;\n","import React from 'react';\nimport Task from './Task';\nimport Button from './Button';\nimport './css/todolist.css';\nimport clsx from 'clsx';\nconst TodoList = ({\n\ttasks,\n\tonRemove,\n\tshowCompleted,\n\tonEdit,\n\tbyCompleted,\n\tbyTodo,\n\ttodo,\n\tfinished,\n\tbyAll,\n\tall,\n\ttheme,\n}) => {\n\tconst taskList = clsx('task-list-container', theme);\n\tconst filter = clsx('filter', theme);\n\treturn (\n\t\t<div className={taskList}>\n\t\t\t<div className={filter}>\n\t\t\t\t<div className=\"filter-content\">\n\t\t\t\t\t<h3>Filter by:</h3>\n\t\t\t\t\t<div className=\"filter-btn-container\">\n\t\t\t\t\t\t<Button className=\"finished\" onClick={byCompleted}>\n\t\t\t\t\t\t\tCompleted\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"todo\" onClick={byTodo}>\n\t\t\t\t\t\t\tTodo\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"unfiltered\" onClick={byAll}>\n\t\t\t\t\t\t\tAll\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{all &&\n\t\t\t\ttasks.map(task => (\n\t\t\t\t\t<Task\n\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t{todo &&\n\t\t\t\ttasks.map(task =>\n\t\t\t\t\ttask.completed == false ? (\n\t\t\t\t\t\t<Task\n\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t{finished &&\n\t\t\t\ttasks.map(task =>\n\t\t\t\t\ttask.completed == true ? (\n\t\t\t\t\t\t<Task\n\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './css/inputbox.css';\nimport clsx from 'clsx';\n\nconst InputBox = ({ label, value, onChange, hasError, theme }) => {\n\tconst css = clsx('title-input input', hasError && 'required');\n\tconst textBox = clsx('text-box', theme);\n\tconst labelBox = clsx('label-box', theme);\n\treturn (\n\t\t<div className={css}>\n\t\t\t<label className={labelBox}>{label}</label>\n\t\t\t<input type=\"text\" className={textBox} value={value} onChange={onChange} />\n\t\t</div>\n\t);\n};\n\nexport default InputBox;\n","import React, { useState } from \"react\";\nimport InputBox from \"./InputBox\";\nimport \"./css/addtodo.css\";\nimport clsx from \"clsx\";\nimport {\n  FaMoon as DarkThemeIcon,\n  FaSun as LightThemeIcon\n} from \"react-icons/fa\";\n\nconst AddTodo = ({\n  addTask,\n  onEditCancel,\n  editTask,\n  saveEditTask,\n  theme,\n  changeTheme\n}) => {\n  const [title, setTitle] = useState(editTask ? editTask.title : \"\");\n  const [content, setContent] = useState(editTask ? editTask.content : \"\");\n  const [errors, setErrors] = useState({ title: false, content: false });\n\n  const onChangeTitle = e => {\n    setTitle(e.target.value);\n    setErrors({ ...errors, title: !e.target.value });\n  };\n  const onChangeContent = e => {\n    setContent(e.target.value);\n    setErrors({ ...errors, content: !e.target.value });\n  };\n  const addTodo = () => {\n    if (title.length > 0 && content.length > 0) {\n      addTask(title, content);\n      setTitle(\"\");\n      setContent(\"\");\n    }\n    setErrors({ title: title.length === 0, content: content.length === 0 });\n  };\n\n  const onCancel = () => {\n    onEditCancel();\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  const addEditedTodo = (newTitle, newContent) => {\n    if (newTitle.length > 0 && newContent.length > 0) {\n      saveEditTask(editTask.id, title, content);\n      setTitle(\"\");\n      setContent(\"\");\n    }\n    setErrors({ title: title.length === 0, content: content.length === 0 });\n  };\n  const taskTracker = clsx(\"task-tracker\", theme);\n  const btn = clsx(\"btn\", theme);\n  const themeBtn = clsx(\"theme-button\", theme);\n  return (\n    <div className=\"add-todo-container\">\n      <div className=\"task-tracker-container\">\n        <h2 className={taskTracker}>Task Tracker</h2>\n        <div className=\"btns-container-add\">\n          <button className={themeBtn} onClick={changeTheme}>\n            {theme == \"dark\" ? <LightThemeIcon /> : <DarkThemeIcon />}\n          </button>\n\n          {!editTask && (\n            <button className={btn} onClick={addTodo}>\n              Add\n            </button>\n          )}\n        </div>\n        {editTask && (\n          <div>\n            <button\n              className=\"btn edit margin\"\n              onClick={() => addEditedTodo(title, content)}\n            >\n              Edit\n            </button>\n            <button className=\"btn cancel\" onClick={onCancel}>\n              Cancel\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"todo-create-container\">\n        <InputBox\n          label=\"Title:\"\n          value={title}\n          onChange={onChangeTitle}\n          hasError={errors.title}\n          theme={theme}\n        />\n        <InputBox\n          label=\"Todo:\"\n          value={content}\n          onChange={onChangeContent}\n          hasError={errors.content}\n          theme={theme}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport clsx from 'clsx';\nimport './css/todoapp.css';\n\nlet counter = 4;\n\nconst initialTasks = Array.from({ length: 4 }).map((_, i) => {\n\treturn {\n\t\tid: i,\n\t\ttitle: 'Lorem ipsum ' + (i + 1),\n\t\tcontent:\n\t\t\t'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n\t\tcompleted: false,\n\t};\n});\n\nconst TodoApp = () => {\n\tconst [tasks, setTasks] = useState(initialTasks);\n\tconst [editTask, setEditTask] = useState(null);\n\tconst [finished, setFinished] = useState(false);\n\tconst [todo, setTodo] = useState(false);\n\tconst [all, setAll] = useState(true);\n\tconst [theme, setTheme] = useState('dark');\n\n\tuseEffect(() => {\n\t\tif (theme == 'light') {\n\t\t\tdocument.body.style = 'background:var(--pagecolorLight)';\n\t\t} else {\n\t\t\tdocument.body.style = ' background:var(--pagecolor)';\n\t\t}\n\t}, [theme]);\n\n\tconst addTask = (title, content) => {\n\t\tconst newTask = { id: ++counter, title: title, content: content };\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\tconst removeTask = id => {\n\t\tif (editTask && id === editTask.id) {\n\t\t\tonEditCancel();\n\t\t}\n\n\t\tsetTasks(tasks.filter(task => task.id !== id));\n\t};\n\tconst showCompleted = id => {\n\t\tsetTasks(tasks.map(task => (task.id == id ? { ...task, completed: !task.completed } : task)));\n\t};\n\tconst showEdit = task => {\n\t\tsetEditTask(task);\n\t};\n\n\tconst onEditCancel = () => {\n\t\tsetEditTask(null);\n\t};\n\n\tconst saveEditTask = (id, title, content) => {\n\t\tsetTasks(tasks.map(task => (task.id == id ? { ...task, title: title, content: content } : task)));\n\t\tsetEditTask(null);\n\t};\n\n\tconst onCancel = (setTitle, setContent) => {\n\t\tsetEditMode(false);\n\t\tsetContent('');\n\t\tsetTitle('');\n\t};\n\tconst byCompleted = () => {\n\t\tsetFinished(true);\n\t\tsetTodo(false);\n\t\tsetAll(false);\n\t};\n\tconst byTodo = () => {\n\t\tsetTodo(true);\n\t\tsetFinished(false);\n\t\tsetAll(false);\n\t};\n\tconst byAll = () => {\n\t\tsetAll(true);\n\t\tsetTodo(false);\n\t\tsetFinished(false);\n\t};\n\n\tconst changeTheme = () => {\n\t\tif (theme === 'light') {\n\t\t\tsetTheme('dark');\n\t\t} else {\n\t\t\tsetTheme('light');\n\t\t}\n\t};\n\n\tconst containerClass = clsx('container', theme);\n\treturn (\n\t\t<div className={containerClass}>\n\t\t\t<AddTodo\n\t\t\t\tkey={editTask && editTask.id}\n\t\t\t\taddTask={addTask}\n\t\t\t\tonCancel={onCancel}\n\t\t\t\teditTask={editTask}\n\t\t\t\tsaveEditTask={saveEditTask}\n\t\t\t\tonEditCancel={onEditCancel}\n\t\t\t\ttheme={theme}\n\t\t\t\tsetTheme={setTheme}\n\t\t\t\tchangeTheme={changeTheme}\n\t\t\t/>\n\t\t\t{tasks.length > 0 && (\n\t\t\t\t<TodoList\n\t\t\t\t\ttasks={tasks}\n\t\t\t\t\tonRemove={removeTask}\n\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\tonEdit={showEdit}\n\t\t\t\t\tbyCompleted={byCompleted}\n\t\t\t\t\tbyTodo={byTodo}\n\t\t\t\t\ttodo={todo}\n\t\t\t\t\tfinished={finished}\n\t\t\t\t\tbyAll={byAll}\n\t\t\t\t\tall={all}\n\t\t\t\t\ttheme={theme}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport './style.css';\nimport TodoApp from './components/TodoApp';\n\nexport default function App() {\n\treturn <TodoApp />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}