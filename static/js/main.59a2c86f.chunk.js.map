{"version":3,"sources":["components/Button.js","context/ThemeContext.js","components/Task.js","components/TodoList.js","components/InputBox.js","components/AddTodo.js","components/TodoApp.js","App.js","index.js"],"names":["Button","children","outline","className","rest","css","clsx","ThemeContext","createContext","Task","task","onRemove","showCompleted","onEdit","theme","useContext","completed","title","edit","onClick","id","content","TodoList","tasks","byCompleted","byTodo","byAll","filter","taskList","filterButtons","filteredTasks","t","todo","applyFilter","map","InputBox","label","value","onChange","hasError","textBox","labelBox","htmlFor","type","AddTodo","addTask","onEditCancel","editTask","saveEditTask","changeTheme","useState","setTitle","setContent","errors","setErrors","addTodo","trim","taskTracker","btn","themeBtn","remove","onKeyPress","ev","key","aria-label","newContent","length","e","target","initialTasks","savedTodos","JSON","parse","localStorage","getItem","TodoApp","toggleTheme","setTasks","setEditTask","all","setFilter","useEffect","setItem","stringify","containerClass","newTask","Math","floor","random","onCancel","setEditMode","Number","parseFloat","console","log","removeItem","savedTheme","App","setTheme","document","body","style","Provider","prev","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.59a2c86f.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\n\nconst Button = ({ children, outline, className, ...rest }) => {\n  const css = clsx(\"button\", className, outline && \"outline\");\n  return (\n    <button {...rest} className={css}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { createContext } from 'react';\n\nconst ThemeContext = createContext('dark');\n\nexport { ThemeContext };\n","import React, { useContext } from 'react';\nimport Button from './Button';\nimport clsx from 'clsx';\nimport './css/task.css';\nimport { ThemeContext } from '../context/ThemeContext';\n\nconst Task = ({ task, onRemove, showCompleted, onEdit }) => {\n\tconst theme = useContext(ThemeContext);\n\tconst completed = task.completed ? 'completed' : '';\n\tconst title = clsx('task-title', theme);\n\tconst edit = clsx('edit', theme);\n\treturn (\n\t\t<div className={`task-container ${completed}`}>\n\t\t\t<div className=\"task-content\" onClick={() => showCompleted(task.id)}>\n\t\t\t\t<h3 className={`${title} ${completed}`}>{task.title}</h3>\n\t\t\t\t<p className={title}>{task.content}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={edit}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonEdit(task);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tEdit\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"remove\" onClick={() => onRemove(task.id)}>\n\t\t\t\t\tRemove\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Task;\n","import React, { useContext } from 'react';\nimport Task from './Task';\nimport Button from './Button';\nimport './css/todolist.css';\nimport clsx from 'clsx';\nimport { ThemeContext } from '../context/ThemeContext';\n\nconst applyFilter = (tasks, filter) => {\n\tif (filter.completed) {\n\t\treturn tasks.filter(t => t.completed);\n\t}\n\n\tif (filter.todo) {\n\t\treturn tasks.filter(t => !t.completed);\n\t}\n\n\treturn tasks;\n};\n\nconst TodoList = ({ tasks, onRemove, showCompleted, onEdit, byCompleted, byTodo, byAll, filter }) => {\n\tconst theme = useContext(ThemeContext);\n\tconst taskList = clsx('task-list-container', theme);\n\tconst filterButtons = clsx('filter', theme);\n\n\tconst filteredTasks = applyFilter(tasks, filter);\n\n\treturn (\n\t\t<div className={taskList}>\n\t\t\t<div className={filterButtons}>\n\t\t\t\t<div className=\"filter-content\">\n\t\t\t\t\t<h3>Filter by:</h3>\n\t\t\t\t\t<div className=\"filter-btn-container\">\n\t\t\t\t\t\t<Button className=\"finished\" onClick={byCompleted}>\n\t\t\t\t\t\t\tCompleted\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"todo\" onClick={byTodo}>\n\t\t\t\t\t\t\tTodo\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"unfiltered\" onClick={byAll}>\n\t\t\t\t\t\t\tAll\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{filteredTasks.map(task => (\n\t\t\t\t<Task key={task.id} task={task} onRemove={onRemove} showCompleted={showCompleted} onEdit={onEdit} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n","import React, { useContext } from 'react';\nimport './css/inputbox.css';\nimport clsx from 'clsx';\nimport { ThemeContext } from '../context/ThemeContext';\n\nconst InputBox = ({ label, value, onChange, hasError }) => {\n\tconst theme = useContext(ThemeContext);\n\tconst css = clsx('title-input input', hasError && 'required');\n\tconst textBox = clsx('text-box', theme);\n\tconst labelBox = clsx('label-box', theme);\n\treturn (\n\t\t<div className={css}>\n\t\t\t<label htmlFor={label} className={labelBox}>\n\t\t\t\t{label}\n\t\t\t</label>\n\t\t\t<input id={label} type=\"text\" className={textBox} value={value} onChange={onChange} />\n\t\t</div>\n\t);\n};\n\nexport default InputBox;\n","import React, { useContext, useState } from 'react';\nimport InputBox from './InputBox';\nimport './css/addtodo.css';\nimport clsx from 'clsx';\nimport { FaMoon as DarkThemeIcon, FaSun as LightThemeIcon } from 'react-icons/fa';\nimport { ThemeContext } from '../context/ThemeContext';\n\nconst AddTodo = ({ addTask, onEditCancel, editTask, saveEditTask, changeTheme }) => {\n\tconst [title, setTitle] = useState(editTask ? editTask.title : '');\n\tconst [content, setContent] = useState(editTask ? editTask.content : '');\n\tconst [errors, setErrors] = useState({ title: false, content: false });\n\n\tconst theme = useContext(ThemeContext);\n\n\tconst onChangeTitle = e => {\n\t\tsetTitle(e.target.value);\n\t\tsetErrors({ ...errors, title: !e.target.value });\n\t};\n\tconst onChangeContent = e => {\n\t\tsetContent(e.target.value);\n\t\tsetErrors({ ...errors, content: !e.target.value });\n\t};\n\tconst addTodo = () => {\n\t\tif (title.trim() && content.trim()) {\n\t\t\taddTask(title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: !title.trim(), content: !content.trim() });\n\t};\n\n\tconst onCancel = () => {\n\t\tonEditCancel();\n\t\tsetTitle('');\n\t\tsetContent('');\n\t};\n\n\tconst addEditedTodo = (newTitle, newContent) => {\n\t\tif (newTitle.length > 0 && newContent.length > 0) {\n\t\t\tsaveEditTask(editTask.id, title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: title.length === 0, content: content.length === 0 });\n\t};\n\tconst taskTracker = clsx('task-tracker', theme);\n\tconst btn = clsx('btn', theme);\n\tconst themeBtn = clsx('theme-button', theme);\n\tconst edit = clsx('btn edit margin', theme);\n\tconst remove = clsx('btn cancel', theme);\n\treturn (\n\t\t<div className=\"add-todo-container\" onKeyPress={ev => ev.key === 'Enter' && addTodo()}>\n\t\t\t<div className=\"task-tracker-container\">\n\t\t\t\t<h2 className={taskTracker}>Task Tracker</h2>\n\t\t\t\t<div className=\"btns-container-add\">\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className={themeBtn} onClick={changeTheme} aria-label=\"Switch theme\">\n\t\t\t\t\t\t\t{theme == 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className={btn} onClick={addTodo}>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{editTask && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className={edit} onClick={() => addEditedTodo(title, content)}>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={remove} onClick={onCancel}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"todo-create-container\">\n\t\t\t\t<InputBox label=\"Title:\" value={title} onChange={onChangeTitle} hasError={errors.title} />\n\t\t\t\t<InputBox label=\"Todo:\" value={content} onChange={onChangeContent} hasError={errors.content} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddTodo;\n","import React, { useState, useEffect, useContext } from 'react';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport { ThemeContext } from '../context/ThemeContext';\nimport clsx from 'clsx';\nimport './css/todoapp.css';\n\nconst initialTasks = [\n\t{\n\t\tid: 0,\n\t\ttitle: 'Example Task',\n\t\tcontent: 'Tap to mark as completed',\n\t\tcompleted: false,\n\t},\n\t{\n\t\tid: 1,\n\t\ttitle: 'Example Task',\n\t\tcontent: \"I'm completed\",\n\t\tcompleted: true,\n\t},\n\t{\n\t\tid: 2,\n\t\ttitle: 'Example Task',\n\t\tcontent: 'Press the add button to create a new task',\n\t\tcompleted: false,\n\t},\n];\nconst savedTodos = JSON.parse(localStorage.getItem('todos'));\nconst TodoApp = ({ toggleTheme }) => {\n\tconst [tasks, setTasks] = useState(savedTodos || initialTasks);\n\tconst [editTask, setEditTask] = useState(null);\n\tconst [filter, setFilter] = useState({\n\t\tcompleted: false,\n\t\ttodo: false,\n\t\tall: true,\n\t});\n\n\tconst theme = useContext(ThemeContext);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('todos', JSON.stringify(tasks));\n\t}, [tasks]);\n\n\tconst addTask = (title, content) => {\n\t\tconst newTask = { id: Math.floor(Math.random() * 1000), title: title, content: content };\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\tconst removeTask = id => {\n\t\tif (editTask && id === editTask.id) {\n\t\t\tonEditCancel();\n\t\t}\n\n\t\tsetTasks(tasks.filter(task => task.id !== id));\n\t};\n\tconst showCompleted = id => {\n\t\tsetTasks(tasks.map(task => (task.id == id ? { ...task, completed: !task.completed } : task)));\n\t};\n\tconst showEdit = task => {\n\t\tsetEditTask(task);\n\t};\n\n\tconst onEditCancel = () => {\n\t\tsetEditTask(null);\n\t};\n\n\tconst saveEditTask = (id, title, content) => {\n\t\tsetTasks(tasks.map(task => (task.id == id ? { ...task, title: title, content: content } : task)));\n\t\tsetEditTask(null);\n\t};\n\n\tconst onCancel = (setTitle, setContent) => {\n\t\tsetEditMode(false);\n\t\tsetContent('');\n\t\tsetTitle('');\n\t};\n\tconst byCompleted = () => {\n\t\tsetFilter({ ...filter, todo: false, all: false, completed: true });\n\t};\n\tconst byTodo = () => {\n\t\tsetFilter({ ...filter, todo: true, all: false, completed: false });\n\t};\n\tconst byAll = () => {\n\t\tsetFilter({ ...filter, todo: false, all: true, completed: false });\n\t};\n\n\tconst containerClass = clsx('container', theme);\n\treturn (\n\t\t<div className={containerClass}>\n\t\t\t<AddTodo\n\t\t\t\tkey={editTask && editTask.id}\n\t\t\t\taddTask={addTask}\n\t\t\t\tonCancel={onCancel}\n\t\t\t\teditTask={editTask}\n\t\t\t\tsaveEditTask={saveEditTask}\n\t\t\t\tonEditCancel={onEditCancel}\n\t\t\t\tchangeTheme={toggleTheme}\n\t\t\t/>\n\t\t\t{tasks.length > 0 && (\n\t\t\t\t<TodoList\n\t\t\t\t\ttasks={tasks}\n\t\t\t\t\tonRemove={removeTask}\n\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\tonEdit={showEdit}\n\t\t\t\t\tbyCompleted={byCompleted}\n\t\t\t\t\tbyTodo={byTodo}\n\t\t\t\t\tbyAll={byAll}\n\t\t\t\t\tfilter={filter}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoApp;\n","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport TodoApp from './components/TodoApp';\nimport { ThemeContext } from './context/ThemeContext';\n\nconst version = Number.parseFloat(localStorage.getItem('version') || 0);\nconst newVersion = 1.2;\n\nif (version < newVersion) {\n\tconsole.log('Outdated app: removing local storage');\n\tlocalStorage.removeItem('todos');\n}\n\nlocalStorage.setItem('version', JSON.stringify(newVersion));\nconst savedTheme = localStorage.getItem('theme');\n\nexport default function App() {\n\tconst [theme, setTheme] = useState(savedTheme || 'dark');\n\n\tuseEffect(() => {\n\t\tif (theme == 'light') {\n\t\t\tdocument.body.style = 'background:var(--pagecolorLight)';\n\t\t} else {\n\t\t\tdocument.body.style = ' background:var(--pagecolor)';\n\t\t}\n\t\tlocalStorage.setItem('theme', theme);\n\t}, [theme]);\n\n\tconst toggleTheme = () => {\n\t\tsetTheme(prev => (prev === 'dark' ? 'light' : 'dark'));\n\t};\n\n\treturn (\n\t\t<ThemeContext.Provider value={theme}>\n\t\t\t<TodoApp toggleTheme={toggleTheme} />\n\t\t</ThemeContext.Provider>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}