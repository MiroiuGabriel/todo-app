{"version":3,"sources":["components/Button.js","components/Task.js","components/TodoList.js","components/InputBox.js","components/AddTodo.js","components/TodoApp.js","App.js","index.js"],"names":["Button","children","outline","className","rest","css","clsx","Task","task","onRemove","showCompleted","onEdit","theme","completed","title","edit","onClick","id","content","TodoList","tasks","byCompleted","byTodo","todo","finished","byAll","all","taskList","filter","map","InputBox","label","value","onChange","hasError","textBox","labelBox","htmlFor","type","AddTodo","addTask","onEditCancel","editTask","saveEditTask","changeTheme","useState","setTitle","setContent","errors","setErrors","taskTracker","btn","themeBtn","aria-label","trim","newContent","length","e","target","initialTasks","savedTheme","localStorage","getItem","savedTodos","JSON","parse","TodoApp","setTasks","setEditTask","setFinished","setTodo","setAll","setTheme","useEffect","document","body","style","setItem","stringify","containerClass","newTask","Math","floor","random","onCancel","setEditMode","App","Number","parseFloat","console","log","removeItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8ca18063.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\n\nconst Button = ({ children, outline, className, ...rest }) => {\n  const css = clsx(\"button\", className, outline && \"outline\");\n  return (\n    <button {...rest} className={css}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport clsx from 'clsx';\nimport './css/task.css';\n\nconst Task = ({ task, onRemove, showCompleted, onEdit, theme }) => {\n\tconst completed = task.completed ? 'completed' : '';\n\tconst title = clsx('task-title', theme);\n\tconst edit = clsx('edit', theme);\n\treturn (\n\t\t<div className={`task-container ${completed}`}>\n\t\t\t<div className=\"task-content\" onClick={() => showCompleted(task.id)}>\n\t\t\t\t<h3 className={`${title} ${completed}`}>{task.title}</h3>\n\t\t\t\t<p className={title}>{task.content}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={edit}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonEdit(task);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tEdit\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"remove\" onClick={() => onRemove(task.id)}>\n\t\t\t\t\tRemove\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Task;\n","import React from 'react';\nimport Task from './Task';\nimport Button from './Button';\nimport './css/todolist.css';\nimport clsx from 'clsx';\nconst TodoList = ({\n\ttasks,\n\tonRemove,\n\tshowCompleted,\n\tonEdit,\n\tbyCompleted,\n\tbyTodo,\n\ttodo,\n\tfinished,\n\tbyAll,\n\tall,\n\ttheme,\n}) => {\n\tconst taskList = clsx('task-list-container', theme);\n\tconst filter = clsx('filter', theme);\n\treturn (\n\t\t<div className={taskList}>\n\t\t\t<div className={filter}>\n\t\t\t\t<div className=\"filter-content\">\n\t\t\t\t\t<h3>Filter by:</h3>\n\t\t\t\t\t<div className=\"filter-btn-container\">\n\t\t\t\t\t\t<Button className=\"finished\" onClick={byCompleted}>\n\t\t\t\t\t\t\tCompleted\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"todo\" onClick={byTodo}>\n\t\t\t\t\t\t\tTodo\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"unfiltered\" onClick={byAll}>\n\t\t\t\t\t\t\tAll\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{all &&\n\t\t\t\ttasks.map(task => (\n\t\t\t\t\t<Task\n\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t{todo &&\n\t\t\t\ttasks.map(task =>\n\t\t\t\t\ttask.completed == false ? (\n\t\t\t\t\t\t<Task\n\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t{finished &&\n\t\t\t\ttasks.map(task =>\n\t\t\t\t\ttask.completed == true ? (\n\t\t\t\t\t\t<Task\n\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './css/inputbox.css';\nimport clsx from 'clsx';\n\nconst InputBox = ({ label, value, onChange, hasError, theme }) => {\n\tconst css = clsx('title-input input', hasError && 'required');\n\tconst textBox = clsx('text-box', theme);\n\tconst labelBox = clsx('label-box', theme);\n\treturn (\n\t\t<div className={css}>\n\t\t\t<label htmlFor={label} className={labelBox}>\n\t\t\t\t{label}\n\t\t\t</label>\n\t\t\t<input id={label} type=\"text\" className={textBox} value={value} onChange={onChange} />\n\t\t</div>\n\t);\n};\n\nexport default InputBox;\n","import React, { useState } from 'react';\nimport InputBox from './InputBox';\nimport './css/addtodo.css';\nimport clsx from 'clsx';\nimport { FaMoon as DarkThemeIcon, FaSun as LightThemeIcon } from 'react-icons/fa';\n\nconst AddTodo = ({ addTask, onEditCancel, editTask, saveEditTask, theme, changeTheme }) => {\n\tconst [title, setTitle] = useState(editTask ? editTask.title : '');\n\tconst [content, setContent] = useState(editTask ? editTask.content : '');\n\tconst [errors, setErrors] = useState({ title: false, content: false });\n\n\tconst onChangeTitle = e => {\n\t\tsetTitle(e.target.value);\n\t\tsetErrors({ ...errors, title: !e.target.value });\n\t};\n\tconst onChangeContent = e => {\n\t\tsetContent(e.target.value);\n\t\tsetErrors({ ...errors, content: !e.target.value });\n\t};\n\tconst addTodo = () => {\n\t\tif (title.trim() && content.trim()) {\n\t\t\taddTask(title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: !title.trim(), content: !content.trim() });\n\t};\n\n\tconst onCancel = () => {\n\t\tonEditCancel();\n\t\tsetTitle('');\n\t\tsetContent('');\n\t};\n\n\tconst addEditedTodo = (newTitle, newContent) => {\n\t\tif (newTitle.length > 0 && newContent.length > 0) {\n\t\t\tsaveEditTask(editTask.id, title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: title.length === 0, content: content.length === 0 });\n\t};\n\tconst taskTracker = clsx('task-tracker', theme);\n\tconst btn = clsx('btn', theme);\n\tconst themeBtn = clsx('theme-button', theme);\n\treturn (\n\t\t<div className=\"add-todo-container\">\n\t\t\t<div className=\"task-tracker-container\">\n\t\t\t\t<h2 className={taskTracker}>Task Tracker</h2>\n\t\t\t\t<div className=\"btns-container-add\">\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className={themeBtn} onClick={changeTheme} aria-label=\"Switch theme\">\n\t\t\t\t\t\t\t{theme == 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className={btn} onClick={addTodo}>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{editTask && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className=\"btn edit margin\" onClick={() => addEditedTodo(title, content)}>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className=\"btn cancel\" onClick={onCancel}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"todo-create-container\">\n\t\t\t\t<InputBox label=\"Title:\" value={title} onChange={onChangeTitle} hasError={errors.title} theme={theme} />\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Todo:\"\n\t\t\t\t\tvalue={content}\n\t\t\t\t\tonChange={onChangeContent}\n\t\t\t\t\thasError={errors.content}\n\t\t\t\t\ttheme={theme}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddTodo;\n","import React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport clsx from 'clsx';\nimport './css/todoapp.css';\n\nconst initialTasks = [\n\t{\n\t\tid: 0,\n\t\ttitle: 'Example Task',\n\t\tcontent: 'Tap to mark as completed',\n\t\tcompleted: false,\n\t},\n\t{\n\t\tid: 1,\n\t\ttitle: 'Example Task',\n\t\tcontent: \"I'm completed\",\n\t\tcompleted: true,\n\t},\n\t{\n\t\tid: 2,\n\t\ttitle: 'Example Task',\n\t\tcontent: 'Press the add button to create a new task',\n\t\tcompleted: false,\n\t},\n];\nconst savedTheme = localStorage.getItem('theme');\nconst savedTodos = JSON.parse(localStorage.getItem('todos'));\nconst TodoApp = () => {\n\tconst [tasks, setTasks] = useState(savedTodos || initialTasks);\n\tconst [editTask, setEditTask] = useState(null);\n\tconst [finished, setFinished] = useState(false);\n\tconst [todo, setTodo] = useState(false);\n\tconst [all, setAll] = useState(true);\n\tconst [theme, setTheme] = useState(savedTheme || 'dark');\n\n\tuseEffect(() => {\n\t\tif (theme == 'light') {\n\t\t\tdocument.body.style = 'background:var(--pagecolorLight)';\n\t\t} else {\n\t\t\tdocument.body.style = ' background:var(--pagecolor)';\n\t\t}\n\t\tlocalStorage.setItem('theme', theme);\n\t\tlocalStorage.setItem('todos', JSON.stringify(tasks));\n\t}, [theme, tasks]);\n\n\tconst addTask = (title, content) => {\n\t\tconst newTask = { id: Math.floor(Math.random() * 1000), title: title, content: content };\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\tconst removeTask = id => {\n\t\tif (editTask && id === editTask.id) {\n\t\t\tonEditCancel();\n\t\t}\n\n\t\tsetTasks(tasks.filter(task => task.id !== id));\n\t};\n\tconst showCompleted = id => {\n\t\tsetTasks(tasks.map(task => (task.id == id ? { ...task, completed: !task.completed } : task)));\n\t};\n\tconst showEdit = task => {\n\t\tsetEditTask(task);\n\t};\n\n\tconst onEditCancel = () => {\n\t\tsetEditTask(null);\n\t};\n\n\tconst saveEditTask = (id, title, content) => {\n\t\tsetTasks(tasks.map(task => (task.id == id ? { ...task, title: title, content: content } : task)));\n\t\tsetEditTask(null);\n\t};\n\n\tconst onCancel = (setTitle, setContent) => {\n\t\tsetEditMode(false);\n\t\tsetContent('');\n\t\tsetTitle('');\n\t};\n\tconst byCompleted = () => {\n\t\tsetFinished(true);\n\t\tsetTodo(false);\n\t\tsetAll(false);\n\t};\n\tconst byTodo = () => {\n\t\tsetTodo(true);\n\t\tsetFinished(false);\n\t\tsetAll(false);\n\t};\n\tconst byAll = () => {\n\t\tsetAll(true);\n\t\tsetTodo(false);\n\t\tsetFinished(false);\n\t};\n\n\tconst changeTheme = () => {\n\t\tif (theme === 'light') {\n\t\t\tsetTheme('dark');\n\t\t} else {\n\t\t\tsetTheme('light');\n\t\t}\n\t};\n\n\tconst containerClass = clsx('container', theme);\n\treturn (\n\t\t<div className={containerClass}>\n\t\t\t<AddTodo\n\t\t\t\tkey={editTask && editTask.id}\n\t\t\t\taddTask={addTask}\n\t\t\t\tonCancel={onCancel}\n\t\t\t\teditTask={editTask}\n\t\t\t\tsaveEditTask={saveEditTask}\n\t\t\t\tonEditCancel={onEditCancel}\n\t\t\t\ttheme={theme}\n\t\t\t\tsetTheme={setTheme}\n\t\t\t\tchangeTheme={changeTheme}\n\t\t\t/>\n\t\t\t{tasks.length > 0 && (\n\t\t\t\t<TodoList\n\t\t\t\t\ttasks={tasks}\n\t\t\t\t\tonRemove={removeTask}\n\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\tonEdit={showEdit}\n\t\t\t\t\tbyCompleted={byCompleted}\n\t\t\t\t\tbyTodo={byTodo}\n\t\t\t\t\ttodo={todo}\n\t\t\t\t\tfinished={finished}\n\t\t\t\t\tbyAll={byAll}\n\t\t\t\t\tall={all}\n\t\t\t\t\ttheme={theme}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport './style.css';\nimport TodoApp from './components/TodoApp';\n\nconst version = Number.parseFloat(localStorage.getItem('version') || 0);\nconst newVersion = 1.2;\n\nif (version < newVersion) {\n\tconsole.log('Outdated app: removing local storage');\n\tlocalStorage.removeItem('todos');\n}\n\nlocalStorage.setItem('version', JSON.stringify(newVersion));\n\nexport default function App() {\n\treturn <TodoApp />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}