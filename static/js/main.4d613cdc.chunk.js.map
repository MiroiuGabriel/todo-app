{"version":3,"sources":["components/Button.js","components/Task.js","components/TodoList.js","components/InputBox.js","components/AddTodo.js","components/TodoApp.js","App.js","index.js"],"names":["Button","children","outline","className","rest","css","clsx","Task","task","onRemove","showCompleted","onEdit","theme","completed","title","edit","onClick","id","content","TodoList","tasks","byCompleted","byTodo","byAll","filter","taskList","filterButtons","all","map","todo","InputBox","label","value","onChange","hasError","textBox","labelBox","htmlFor","type","AddTodo","addTask","onEditCancel","editTask","saveEditTask","changeTheme","useState","setTitle","setContent","errors","setErrors","taskTracker","btn","themeBtn","remove","aria-label","trim","newContent","length","e","target","initialTasks","savedTheme","localStorage","getItem","savedTodos","JSON","parse","TodoApp","setTasks","setEditTask","setFilter","setTheme","useEffect","document","body","style","setItem","stringify","containerClass","newTask","Math","floor","random","onCancel","setEditMode","App","Number","parseFloat","console","log","removeItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4d613cdc.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\n\nconst Button = ({ children, outline, className, ...rest }) => {\n  const css = clsx(\"button\", className, outline && \"outline\");\n  return (\n    <button {...rest} className={css}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport clsx from 'clsx';\nimport './css/task.css';\n\nconst Task = ({ task, onRemove, showCompleted, onEdit, theme }) => {\n\tconst completed = task.completed ? 'completed' : '';\n\tconst title = clsx('task-title', theme);\n\tconst edit = clsx('edit', theme);\n\treturn (\n\t\t<div className={`task-container ${completed}`}>\n\t\t\t<div className=\"task-content\" onClick={() => showCompleted(task.id)}>\n\t\t\t\t<h3 className={`${title} ${completed}`}>{task.title}</h3>\n\t\t\t\t<p className={title}>{task.content}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={edit}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonEdit(task);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tEdit\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"remove\" onClick={() => onRemove(task.id)}>\n\t\t\t\t\tRemove\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Task;\n","import React from 'react';\nimport Task from './Task';\nimport Button from './Button';\nimport './css/todolist.css';\nimport clsx from 'clsx';\nconst TodoList = ({ tasks, onRemove, showCompleted, onEdit, byCompleted, byTodo, byAll, filter, theme }) => {\n\tconst taskList = clsx('task-list-container', theme);\n\tconst filterButtons = clsx('filter', theme);\n\treturn (\n\t\t<div className={taskList}>\n\t\t\t<div className={filterButtons}>\n\t\t\t\t<div className=\"filter-content\">\n\t\t\t\t\t<h3>Filter by:</h3>\n\t\t\t\t\t<div className=\"filter-btn-container\">\n\t\t\t\t\t\t<Button className=\"finished\" onClick={byCompleted}>\n\t\t\t\t\t\t\tCompleted\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"todo\" onClick={byTodo}>\n\t\t\t\t\t\t\tTodo\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"unfiltered\" onClick={byAll}>\n\t\t\t\t\t\t\tAll\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{filter.all &&\n\t\t\t\ttasks.map(task => (\n\t\t\t\t\t<Task\n\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t{filter.todo &&\n\t\t\t\ttasks.map(task =>\n\t\t\t\t\t!task.completed ? (\n\t\t\t\t\t\t<Task\n\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t{filter.completed &&\n\t\t\t\ttasks.map(task =>\n\t\t\t\t\ttask.completed ? (\n\t\t\t\t\t\t<Task\n\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './css/inputbox.css';\nimport clsx from 'clsx';\n\nconst InputBox = ({ label, value, onChange, hasError, theme }) => {\n\tconst css = clsx('title-input input', hasError && 'required');\n\tconst textBox = clsx('text-box', theme);\n\tconst labelBox = clsx('label-box', theme);\n\treturn (\n\t\t<div className={css}>\n\t\t\t<label htmlFor={label} className={labelBox}>\n\t\t\t\t{label}\n\t\t\t</label>\n\t\t\t<input id={label} type=\"text\" className={textBox} value={value} onChange={onChange} />\n\t\t</div>\n\t);\n};\n\nexport default InputBox;\n","import React, { useState } from 'react';\nimport InputBox from './InputBox';\nimport './css/addtodo.css';\nimport clsx from 'clsx';\nimport { FaMoon as DarkThemeIcon, FaSun as LightThemeIcon } from 'react-icons/fa';\n\nconst AddTodo = ({ addTask, onEditCancel, editTask, saveEditTask, theme, changeTheme }) => {\n\tconst [title, setTitle] = useState(editTask ? editTask.title : '');\n\tconst [content, setContent] = useState(editTask ? editTask.content : '');\n\tconst [errors, setErrors] = useState({ title: false, content: false });\n\n\tconst onChangeTitle = e => {\n\t\tsetTitle(e.target.value);\n\t\tsetErrors({ ...errors, title: !e.target.value });\n\t};\n\tconst onChangeContent = e => {\n\t\tsetContent(e.target.value);\n\t\tsetErrors({ ...errors, content: !e.target.value });\n\t};\n\tconst addTodo = () => {\n\t\tif (title.trim() && content.trim()) {\n\t\t\taddTask(title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: !title.trim(), content: !content.trim() });\n\t};\n\n\tconst onCancel = () => {\n\t\tonEditCancel();\n\t\tsetTitle('');\n\t\tsetContent('');\n\t};\n\n\tconst addEditedTodo = (newTitle, newContent) => {\n\t\tif (newTitle.length > 0 && newContent.length > 0) {\n\t\t\tsaveEditTask(editTask.id, title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: title.length === 0, content: content.length === 0 });\n\t};\n\tconst taskTracker = clsx('task-tracker', theme);\n\tconst btn = clsx('btn', theme);\n\tconst themeBtn = clsx('theme-button', theme);\n\tconst edit = clsx('btn edit margin', theme);\n\tconst remove = clsx('btn cancel', theme);\n\treturn (\n\t\t<div className=\"add-todo-container\">\n\t\t\t<div className=\"task-tracker-container\">\n\t\t\t\t<h2 className={taskTracker}>Task Tracker</h2>\n\t\t\t\t<div className=\"btns-container-add\">\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className={themeBtn} onClick={changeTheme} aria-label=\"Switch theme\">\n\t\t\t\t\t\t\t{theme == 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className={btn} onClick={addTodo}>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{editTask && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className={edit} onClick={() => addEditedTodo(title, content)}>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={remove} onClick={onCancel}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"todo-create-container\">\n\t\t\t\t<InputBox label=\"Title:\" value={title} onChange={onChangeTitle} hasError={errors.title} theme={theme} />\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Todo:\"\n\t\t\t\t\tvalue={content}\n\t\t\t\t\tonChange={onChangeContent}\n\t\t\t\t\thasError={errors.content}\n\t\t\t\t\ttheme={theme}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddTodo;\n","import React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport clsx from 'clsx';\nimport './css/todoapp.css';\n\nconst initialTasks = [\n\t{\n\t\tid: 0,\n\t\ttitle: 'Example Task',\n\t\tcontent: 'Tap to mark as completed',\n\t\tcompleted: false,\n\t},\n\t{\n\t\tid: 1,\n\t\ttitle: 'Example Task',\n\t\tcontent: \"I'm completed\",\n\t\tcompleted: true,\n\t},\n\t{\n\t\tid: 2,\n\t\ttitle: 'Example Task',\n\t\tcontent: 'Press the add button to create a new task',\n\t\tcompleted: false,\n\t},\n];\nconst savedTheme = localStorage.getItem('theme');\nconst savedTodos = JSON.parse(localStorage.getItem('todos'));\nconst TodoApp = () => {\n\tconst [tasks, setTasks] = useState(savedTodos || initialTasks);\n\tconst [editTask, setEditTask] = useState(null);\n\tconst [filter, setFilter] = useState({\n\t\tcompleted: false,\n\t\ttodo: false,\n\t\tall: true,\n\t});\n\tconst [theme, setTheme] = useState(savedTheme || 'dark');\n\n\tuseEffect(() => {\n\t\tif (theme == 'light') {\n\t\t\tdocument.body.style = 'background:var(--pagecolorLight)';\n\t\t} else {\n\t\t\tdocument.body.style = ' background:var(--pagecolor)';\n\t\t}\n\t\tlocalStorage.setItem('theme', theme);\n\t\tlocalStorage.setItem('todos', JSON.stringify(tasks));\n\t}, [theme, tasks]);\n\n\tconst addTask = (title, content) => {\n\t\tconst newTask = { id: Math.floor(Math.random() * 1000), title: title, content: content };\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\tconst removeTask = id => {\n\t\tif (editTask && id === editTask.id) {\n\t\t\tonEditCancel();\n\t\t}\n\n\t\tsetTasks(tasks.filter(task => task.id !== id));\n\t};\n\tconst showCompleted = id => {\n\t\tsetTasks(tasks.map(task => (task.id == id ? { ...task, completed: !task.completed } : task)));\n\t};\n\tconst showEdit = task => {\n\t\tsetEditTask(task);\n\t};\n\n\tconst onEditCancel = () => {\n\t\tsetEditTask(null);\n\t};\n\n\tconst saveEditTask = (id, title, content) => {\n\t\tsetTasks(\n\t\t\ttasks.map(task => (task.id == id ? { ...task, title: title, content: content, completed: false } : task))\n\t\t);\n\t\tsetEditTask(null);\n\t};\n\n\tconst onCancel = (setTitle, setContent) => {\n\t\tsetEditMode(false);\n\t\tsetContent('');\n\t\tsetTitle('');\n\t};\n\tconst byCompleted = () => {\n\t\tsetFilter({ ...filter, todo: false, all: false, completed: true });\n\t};\n\tconst byTodo = () => {\n\t\tsetFilter({ ...filter, todo: true, all: false, completed: false });\n\t};\n\tconst byAll = () => {\n\t\tsetFilter({ ...filter, todo: false, all: true, completed: false });\n\t};\n\n\tconst changeTheme = () => {\n\t\tif (theme === 'light') {\n\t\t\tsetTheme('dark');\n\t\t} else {\n\t\t\tsetTheme('light');\n\t\t}\n\t};\n\n\tconst containerClass = clsx('container', theme);\n\treturn (\n\t\t<div className={containerClass}>\n\t\t\t<AddTodo\n\t\t\t\tkey={editTask && editTask.id}\n\t\t\t\taddTask={addTask}\n\t\t\t\tonCancel={onCancel}\n\t\t\t\teditTask={editTask}\n\t\t\t\tsaveEditTask={saveEditTask}\n\t\t\t\tonEditCancel={onEditCancel}\n\t\t\t\ttheme={theme}\n\t\t\t\tsetTheme={setTheme}\n\t\t\t\tchangeTheme={changeTheme}\n\t\t\t/>\n\t\t\t{tasks.length > 0 && (\n\t\t\t\t<TodoList\n\t\t\t\t\ttasks={tasks}\n\t\t\t\t\tonRemove={removeTask}\n\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\tonEdit={showEdit}\n\t\t\t\t\tbyCompleted={byCompleted}\n\t\t\t\t\tbyTodo={byTodo}\n\t\t\t\t\tbyAll={byAll}\n\t\t\t\t\tfilter={filter}\n\t\t\t\t\ttheme={theme}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport './style.css';\nimport TodoApp from './components/TodoApp';\n\nconst version = Number.parseFloat(localStorage.getItem('version') || 0);\nconst newVersion = 1.2;\n\nif (version < newVersion) {\n\tconsole.log('Outdated app: removing local storage');\n\tlocalStorage.removeItem('todos');\n}\n\nlocalStorage.setItem('version', JSON.stringify(newVersion));\n\nexport default function App() {\n\treturn <TodoApp />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}