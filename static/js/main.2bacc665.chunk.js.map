{"version":3,"sources":["components/Button.tsx","components/Task.tsx","components/TodoList.tsx","components/InputBox.tsx","components/AddTodo.tsx","components/TodoApp.tsx","App.tsx","index.tsx"],"names":["Button","children","outline","className","rest","css","clsx","Task","task","onRemove","showCompleted","onEdit","completedContainer","completed","completedTitle","onClick","id","title","content","TodoList","tasks","byCompleted","byTodo","byAll","filteredTasks","filter","t","todo","applyFilter","map","InputBox","label","value","onChange","hasError","htmlFor","type","savedTheme","localStorage","getItem","AddTodo","addTask","onEditCancel","editTask","saveEditTask","useState","setTitle","setContent","errors","setErrors","theme","setTheme","useEffect","document","documentElement","setAttribute","setItem","addTodo","trim","onKeyPress","ev","key","prev","aria-label","newTitle","newContent","length","e","target","savedTodos","JSON","parse","TodoApp","setTasks","setEditTask","all","setFilter","a","axios","todosResponse","data","slice","fetchData","stringify","newTask","Math","floor","random","console","log","Number","parseFloat","removeItem","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2bacc665.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\n\ntype Props = {\n\toutline?: boolean;\n\tclassName: string;\n\tonClick: () => void;\n};\n\nconst Button: React.FC<Props> = ({ children, outline, className, ...rest }) => {\n\tconst css = clsx('button', className, outline && 'outline');\n\treturn (\n\t\t<button {...rest} className={css}>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport clsx from 'clsx';\nimport './css/task.css';\n\ntype Tasks = {\n\tid: number;\n\ttitle: string;\n\tcontent: string;\n\tcompleted: boolean;\n};\n\ntype Props = {\n\ttask: Tasks;\n\tonRemove: (id: number) => void;\n\tshowCompleted: (id: number) => void;\n\tonEdit: (task: Tasks) => void;\n};\n\nconst Task: React.FC<Props> = ({ task, onRemove, showCompleted, onEdit }) => {\n\tconst completedContainer = clsx('task-container', task.completed && 'completed');\n\tconst completedTitle = clsx('task-title', task.completed && 'completed');\n\treturn (\n\t\t<div className={completedContainer}>\n\t\t\t<div className=\"task-content\" onClick={() => showCompleted(task.id)}>\n\t\t\t\t<h3 className={completedTitle}>{task.title}</h3>\n\t\t\t\t<p className=\"task-title\">{task.content}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button className=\"edit\" onClick={() => onEdit(task)}>\n\t\t\t\t\tEdit\n\t\t\t\t</Button>\n\t\t\t\t<Button className=\"remove\" onClick={() => onRemove(task.id)}>\n\t\t\t\t\tRemove\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Task;\n","import React from 'react';\nimport TaskComponent from './Task';\nimport Button from './Button';\nimport './css/todolist.css';\n\ntype Task = {\n\tid: number;\n\ttitle: string;\n\tcontent: string;\n\tcompleted: boolean;\n};\ntype Filter = {\n\tcompleted: boolean;\n\ttodo: boolean;\n\tall: boolean;\n};\ntype Props = {\n\ttasks: Task[];\n\tonRemove: (id: number) => void;\n\tshowCompleted: (id: number) => void;\n\tonEdit: (task: Task) => void;\n\tbyCompleted: () => void;\n\tbyTodo: () => void;\n\tbyAll: () => void;\n\tfilter: Filter;\n};\n\nconst applyFilter = (tasks: Task[], filter: Filter) => {\n\tif (filter.completed) {\n\t\treturn tasks.filter(t => t.completed);\n\t}\n\n\tif (filter.todo) {\n\t\treturn tasks.filter(t => !t.completed);\n\t}\n\n\treturn tasks;\n};\n\nconst TodoList: React.FC<Props> = ({ tasks, onRemove, showCompleted, onEdit, byCompleted, byTodo, byAll, filter }) => {\n\tconst filteredTasks = applyFilter(tasks, filter);\n\n\treturn (\n\t\t<div className=\"task-list-container\">\n\t\t\t<div className=\"filter\">\n\t\t\t\t<div className=\"filter-content\">\n\t\t\t\t\t<h3>Filter by:</h3>\n\t\t\t\t\t<div className=\"filter-btn-container\">\n\t\t\t\t\t\t<Button className=\"finished\" onClick={byCompleted}>\n\t\t\t\t\t\t\tCompleted\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"todo\" onClick={byTodo}>\n\t\t\t\t\t\t\tTodo\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"unfiltered\" onClick={byAll}>\n\t\t\t\t\t\t\tAll\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{filteredTasks.map(task => (\n\t\t\t\t<TaskComponent\n\t\t\t\t\tkey={task.id}\n\t\t\t\t\ttask={task}\n\t\t\t\t\tonRemove={onRemove}\n\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './css/inputbox.css';\nimport clsx from 'clsx';\n\ntype Props = {\n\tlabel: string;\n\tvalue: string;\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n\thasError: boolean;\n};\n\nconst InputBox: React.FC<Props> = ({ label, value, onChange, hasError }) => {\n\tconst css = clsx('title-input input', hasError && 'required');\n\treturn (\n\t\t<div className={css}>\n\t\t\t<label htmlFor={label} className=\"label-box\">\n\t\t\t\t{label}\n\t\t\t</label>\n\t\t\t<input id={label} type=\"text\" className=\"text-box\" value={value} onChange={onChange} />\n\t\t</div>\n\t);\n};\n\nexport default InputBox;\n","import React, { useState, useEffect } from 'react';\nimport InputBox from './InputBox';\nimport './css/addtodo.css';\nimport { FaMoon as DarkThemeIcon, FaSun as LightThemeIcon } from 'react-icons/fa';\n\nconst savedTheme = localStorage.getItem('theme');\ntype Task = {\n\tid: number;\n\ttitle: string;\n\tcontent: string;\n\tcompleted: boolean;\n};\ntype Props = {\n\taddTask: (title: string, content: string) => void;\n\tonEditCancel: () => void;\n\teditTask: null | Task;\n\tsaveEditTask: (id: number, title: string, content: string) => void;\n};\n\nconst AddTodo: React.FC<Props> = ({ addTask, onEditCancel, editTask, saveEditTask }) => {\n\tconst [title, setTitle] = useState(editTask ? editTask.title : '');\n\tconst [content, setContent] = useState(editTask ? editTask.content : '');\n\tconst [errors, setErrors] = useState({ title: false, content: false });\n\n\tconst [theme, setTheme] = useState(savedTheme || 'dark');\n\n\tuseEffect(() => {\n\t\tdocument.documentElement.setAttribute('data-theme', theme);\n\t\tlocalStorage.setItem('theme', theme);\n\t}, [theme]);\n\n\tconst changeTheme = () => {\n\t\tsetTheme(prev => (prev === 'dark' ? 'light' : 'dark'));\n\t};\n\n\tconst onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetTitle(e.target.value);\n\t\tsetErrors({ ...errors, title: !e.target.value });\n\t};\n\tconst onChangeContent = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetContent(e.target.value);\n\t\tsetErrors({ ...errors, content: !e.target.value });\n\t};\n\tconst addTodo = () => {\n\t\tif (title.trim() && content.trim()) {\n\t\t\taddTask(title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: !title.trim(), content: !content.trim() });\n\t};\n\n\tconst onCancel = () => {\n\t\tonEditCancel();\n\t\tsetTitle('');\n\t\tsetContent('');\n\t};\n\n\tconst addEditedTodo = (newTitle: string, newContent: string) => {\n\t\tif (editTask && newTitle.length && newContent.length) {\n\t\t\tsaveEditTask(editTask.id, title, content);\n\t\t\tsetTitle('');\n\t\t\tsetContent('');\n\t\t}\n\t\tsetErrors({ title: title.length === 0, content: content.length === 0 });\n\t};\n\treturn (\n\t\t<div className=\"add-todo-container\" onKeyPress={ev => ev.key === 'Enter' && addTodo()}>\n\t\t\t<div className=\"task-tracker-container\">\n\t\t\t\t<h2 className=\"task-tracker\">Task Tracker</h2>\n\t\t\t\t<div className=\"btns-container-add\">\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className=\"theme-button\" onClick={changeTheme} aria-label=\"Switch theme\">\n\t\t\t\t\t\t\t{theme == 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{!editTask && (\n\t\t\t\t\t\t<button className=\"btn\" onClick={addTodo}>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{editTask && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className=\"btn edit margin\" onClick={() => addEditedTodo(title, content)}>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className=\"btn cancel\" onClick={onCancel}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"todo-create-container\">\n\t\t\t\t<InputBox label=\"Title:\" value={title} onChange={onChangeTitle} hasError={errors.title} />\n\t\t\t\t<InputBox label=\"Todo:\" value={content} onChange={onChangeContent} hasError={errors.content} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddTodo;\n","import React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport './css/todoapp.css';\nimport axios from 'axios';\n\nconst savedTodos: Task[] | null = JSON.parse(localStorage.getItem('todos') || 'null');\n\ntype Task = {\n\tid: number;\n\ttitle: string;\n\tcontent: string;\n\tcompleted: boolean;\n};\n\nconst TodoApp = () => {\n\tconst [tasks, setTasks] = useState<Task[]>(savedTodos || []);\n\tconst [editTask, setEditTask] = useState<null | Task>(null);\n\tconst [filter, setFilter] = useState({\n\t\tcompleted: false,\n\t\ttodo: false,\n\t\tall: true,\n\t});\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tif (!savedTodos) {\n\t\t\t\tconst todosResponse = await axios('https://jsonplaceholder.typicode.com/todos');\n\t\t\t\tsetTasks(todosResponse.data.slice(0, 4).map((todo: Task) => ({ ...todo, content: todo.title })));\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('todos', JSON.stringify(tasks));\n\t}, [tasks]);\n\n\tconst addTask = (title: string, content: string) => {\n\t\tconst newTask = { id: Math.floor(Math.random() * 1000), title: title, content: content, completed: false };\n\t\tconsole.log([...tasks, newTask]);\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\tconst removeTask = (id: number) => {\n\t\tif (editTask && id === editTask.id) {\n\t\t\tonEditCancel();\n\t\t}\n\n\t\tsetTasks(tasks.filter(task => task.id !== id));\n\t};\n\n\tconst showCompleted = (id: number) => {\n\t\tsetTasks(tasks.map(task => (task.id === id ? { ...task, completed: !task.completed } : task)));\n\t};\n\n\tconst showEdit = (task: Task) => {\n\t\tsetEditTask(task);\n\t};\n\n\tconst onEditCancel = () => {\n\t\tsetEditTask(null);\n\t};\n\n\tconst saveEditTask = (id: number, title: string, content: string) => {\n\t\tsetTasks(tasks.map(task => (task.id === id ? { ...task, title: title, content: content } : task)));\n\t\tsetEditTask(null);\n\t};\n\n\tconst byCompleted = () => {\n\t\tsetFilter({ ...filter, todo: false, all: false, completed: true });\n\t};\n\n\tconst byTodo = () => {\n\t\tsetFilter({ ...filter, todo: true, all: false, completed: false });\n\t};\n\n\tconst byAll = () => {\n\t\tsetFilter({ ...filter, todo: false, all: true, completed: false });\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<AddTodo\n\t\t\t\tkey={editTask && editTask.id}\n\t\t\t\taddTask={addTask}\n\t\t\t\teditTask={editTask}\n\t\t\t\tsaveEditTask={saveEditTask}\n\t\t\t\tonEditCancel={onEditCancel}\n\t\t\t/>\n\t\t\t{tasks.length > 0 && (\n\t\t\t\t<TodoList\n\t\t\t\t\ttasks={tasks}\n\t\t\t\t\tonRemove={removeTask}\n\t\t\t\t\tshowCompleted={showCompleted}\n\t\t\t\t\tonEdit={showEdit}\n\t\t\t\t\tbyCompleted={byCompleted}\n\t\t\t\t\tbyTodo={byTodo}\n\t\t\t\t\tbyAll={byAll}\n\t\t\t\t\tfilter={filter}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport './style.css';\nimport TodoApp from './components/TodoApp';\n\nconst version = Number.parseFloat(localStorage.getItem('version') || '0');\nconst newVersion = 1.2;\n\nif (version < newVersion) {\n\tconsole.log('Outdated app: removing local storage');\n\tlocalStorage.removeItem('todos');\n}\n\nlocalStorage.setItem('version', JSON.stringify(newVersion));\n\nconst App: React.FC = () => {\n\treturn <TodoApp />;\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}